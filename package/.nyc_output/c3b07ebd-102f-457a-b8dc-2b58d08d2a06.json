{"/Users/ez/Documents/github/simplyCoders/humanify-numbers/package/src/index.ts":{"path":"/Users/ez/Documents/github/simplyCoders/humanify-numbers/package/src/index.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":25}},"2":{"start":{"line":6,"column":29},"end":{"line":6,"column":58}},"3":{"start":{"line":7,"column":27},"end":{"line":7,"column":62}},"4":{"start":{"line":8,"column":8},"end":{"line":10,"column":9}},"5":{"start":{"line":9,"column":12},"end":{"line":9,"column":25}},"6":{"start":{"line":11,"column":21},"end":{"line":11,"column":68}},"7":{"start":{"line":12,"column":25},"end":{"line":12,"column":97}},"8":{"start":{"line":13,"column":30},"end":{"line":13,"column":49}},"9":{"start":{"line":14,"column":30},"end":{"line":14,"column":124}},"10":{"start":{"line":15,"column":26},"end":{"line":15,"column":86}},"11":{"start":{"line":16,"column":8},"end":{"line":18,"column":9}},"12":{"start":{"line":17,"column":12},"end":{"line":17,"column":25}},"13":{"start":{"line":19,"column":8},"end":{"line":21,"column":9}},"14":{"start":{"line":20,"column":12},"end":{"line":20,"column":25}},"15":{"start":{"line":22,"column":8},"end":{"line":25,"column":9}},"16":{"start":{"line":23,"column":28},"end":{"line":23,"column":63}},"17":{"start":{"line":24,"column":12},"end":{"line":24,"column":33}},"18":{"start":{"line":26,"column":23},"end":{"line":26,"column":38}},"19":{"start":{"line":27,"column":27},"end":{"line":27,"column":74}},"20":{"start":{"line":28,"column":23},"end":{"line":28,"column":87}},"21":{"start":{"line":29,"column":31},"end":{"line":29,"column":57}},"22":{"start":{"line":30,"column":29},"end":{"line":30,"column":91}},"23":{"start":{"line":31,"column":8},"end":{"line":31,"column":50}},"24":{"start":{"line":34,"column":0},"end":{"line":34,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":4},"end":{"line":5,"column":5}},"loc":{"start":{"line":5,"column":36},"end":{"line":32,"column":5}},"line":5}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":8},"end":{"line":10,"column":9}},"type":"if","locations":[{"start":{"line":8,"column":8},"end":{"line":10,"column":9}},{"start":{"line":8,"column":8},"end":{"line":10,"column":9}}],"line":8},"1":{"loc":{"start":{"line":11,"column":21},"end":{"line":11,"column":68}},"type":"cond-expr","locations":[{"start":{"line":11,"column":56},"end":{"line":11,"column":58}},{"start":{"line":11,"column":61},"end":{"line":11,"column":68}}],"line":11},"2":{"loc":{"start":{"line":12,"column":25},"end":{"line":12,"column":97}},"type":"cond-expr","locations":[{"start":{"line":12,"column":61},"end":{"line":12,"column":69}},{"start":{"line":12,"column":72},"end":{"line":12,"column":97}}],"line":12},"3":{"loc":{"start":{"line":14,"column":30},"end":{"line":14,"column":124}},"type":"cond-expr","locations":[{"start":{"line":14,"column":106},"end":{"line":14,"column":107}},{"start":{"line":14,"column":110},"end":{"line":14,"column":124}}],"line":14},"4":{"loc":{"start":{"line":14,"column":31},"end":{"line":14,"column":102}},"type":"binary-expr","locations":[{"start":{"line":14,"column":31},"end":{"line":14,"column":65}},{"start":{"line":14,"column":69},"end":{"line":14,"column":102}}],"line":14},"5":{"loc":{"start":{"line":15,"column":26},"end":{"line":15,"column":86}},"type":"cond-expr","locations":[{"start":{"line":15,"column":69},"end":{"line":15,"column":70}},{"start":{"line":15,"column":73},"end":{"line":15,"column":86}}],"line":15},"6":{"loc":{"start":{"line":15,"column":27},"end":{"line":15,"column":65}},"type":"binary-expr","locations":[{"start":{"line":15,"column":27},"end":{"line":15,"column":44}},{"start":{"line":15,"column":48},"end":{"line":15,"column":65}}],"line":15},"7":{"loc":{"start":{"line":16,"column":8},"end":{"line":18,"column":9}},"type":"if","locations":[{"start":{"line":16,"column":8},"end":{"line":18,"column":9}},{"start":{"line":16,"column":8},"end":{"line":18,"column":9}}],"line":16},"8":{"loc":{"start":{"line":16,"column":12},"end":{"line":16,"column":37}},"type":"binary-expr","locations":[{"start":{"line":16,"column":12},"end":{"line":16,"column":24}},{"start":{"line":16,"column":28},"end":{"line":16,"column":37}}],"line":16},"9":{"loc":{"start":{"line":19,"column":8},"end":{"line":21,"column":9}},"type":"if","locations":[{"start":{"line":19,"column":8},"end":{"line":21,"column":9}},{"start":{"line":19,"column":8},"end":{"line":21,"column":9}}],"line":19},"10":{"loc":{"start":{"line":19,"column":12},"end":{"line":19,"column":52}},"type":"binary-expr","locations":[{"start":{"line":19,"column":12},"end":{"line":19,"column":24}},{"start":{"line":19,"column":28},"end":{"line":19,"column":52}}],"line":19},"11":{"loc":{"start":{"line":22,"column":8},"end":{"line":25,"column":9}},"type":"if","locations":[{"start":{"line":22,"column":8},"end":{"line":25,"column":9}},{"start":{"line":22,"column":8},"end":{"line":25,"column":9}}],"line":22},"12":{"loc":{"start":{"line":23,"column":28},"end":{"line":23,"column":63}},"type":"cond-expr","locations":[{"start":{"line":23,"column":45},"end":{"line":23,"column":58}},{"start":{"line":23,"column":61},"end":{"line":23,"column":63}}],"line":23},"13":{"loc":{"start":{"line":28,"column":23},"end":{"line":28,"column":87}},"type":"cond-expr","locations":[{"start":{"line":28,"column":38},"end":{"line":28,"column":60}},{"start":{"line":28,"column":63},"end":{"line":28,"column":87}}],"line":28}},"s":{"0":1,"1":1,"2":27,"3":27,"4":27,"5":1,"6":26,"7":26,"8":26,"9":26,"10":26,"11":26,"12":1,"13":25,"14":1,"15":24,"16":2,"17":2,"18":22,"19":22,"20":22,"21":22,"22":22,"23":22,"24":1},"f":{"0":27},"b":{"0":[1,26],"1":[11,15],"2":[19,7],"3":[19,7],"4":[26,7],"5":[3,23],"6":[26,24],"7":[1,25],"8":[26,7],"9":[1,24],"10":[25,6],"11":[2,22],"12":[1,1],"13":[4,18]},"inputSourceMap":{"version":3,"file":"/Users/ez/Documents/github/simplyCoders/humanify-numbers/package/src/index.ts","sources":["/Users/ez/Documents/github/simplyCoders/humanify-numbers/package/src/index.ts"],"names":[],"mappings":";;;AAKA,MAAa,OAAO;IAClB,MAAM,CAAC,QAAQ,CAAC,KAAa,EAAE,OAAa;QAC1C,MAAM,YAAY,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAA;QAClD,MAAM,UAAU,GAAG,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAA;QAGtD,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YAC7B,OAAO,KAAK,CAAA;SACb;QAGD,MAAM,IAAI,GAAG,CAAC,OAAO,OAAO,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAA;QAE5D,MAAM,QAAQ,GAAG,CAAC,OAAO,IAAI,CAAC,MAAM,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAA;QACzF,MAAM,YAAY,GAAG,CAAC,QAAQ,KAAK,MAAM,CAAC,CAAA;QAE1C,MAAM,aAAa,GAAG,CAAC,OAAO,IAAI,CAAC,SAAS,KAAK,QAAQ,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAA;QACpH,MAAM,SAAS,GAAG,CAAC,aAAa,GAAG,CAAC,IAAI,aAAa,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,aAAa,CAAA;QAG9E,IAAI,YAAY,IAAI,KAAK,GAAG,CAAC,EAAE;YAC7B,OAAO,KAAK,CAAA;SACb;QAED,IAAI,YAAY,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;YAC5C,OAAO,KAAK,CAAA;SACb;QAED,IAAI,KAAK,KAAK,CAAC,EAAE;YACf,MAAM,OAAO,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAA;YACnD,OAAO,IAAI,OAAO,EAAE,CAAA;SACrB;QAGD,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA;QAC9B,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAA;QAClE,MAAM,MAAM,GAAG,YAAY,CAAC,CAAC,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,UAAU,CAAC,CAAA;QAE/E,MAAM,cAAc,GAAG,UAAU,GAAG,CAAC,GAAG,SAAS,CAAA;QACjD,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,EAAE,IAAI,cAAc,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,SAAS,CAAC,CAAA;QAGnF,OAAO,CAAC,YAAY,CAAC,CAAC,QAAQ,EAAE,GAAG,MAAM,CAAA;IAC3C,CAAC;CACF;AA5CD,0BA4CC","sourcesContent":["// //////////////////////////////////////////////////////////////\n// humanify-numbers\n// Convert numbers to human readbale and short strings.\n// Developed by simplyCoders, 2021.\n\nexport class Numbers {\n  static Humanify(value: number, options?: any) {\n    const numberSuffix = ['', 'K', 'M', 'B', 'T', 'Q']\n    const byteSuffix = ['B', 'KB', 'MB', 'GB', 'TB', 'PB']\n\n    // validate value\n    if (typeof value !== 'number') {\n      return 'NaN'\n    }\n\n    // collect options\n    const opts = (typeof options === 'undefined') ? {} : options\n\n    const optsByte = (typeof opts.format !== 'string') ? 'number' : opts.format.toLowerCase()\n    const isByteFormat = (optsByte === 'byte')\n\n    const optsPrecision = (typeof opts.precision !== 'number' || !Number.isInteger(opts.precision)) ? 1 : opts.precision\n    const precision = (optsPrecision < 0 || optsPrecision > 3) ? 1 : optsPrecision\n\n    // end cases\n    if (isByteFormat && value < 0) {\n      return 'NaN'\n    }\n\n    if (isByteFormat && !Number.isInteger(value)) {\n      return 'NaN'\n    }\n\n    if (value === 0) {\n      const zSuffix = (isByteFormat) ? byteSuffix[0] : ''\n      return `0${zSuffix}`\n    }\n\n    // analyze the number\n    const avalue = Math.abs(value)\n    const numberType = Math.floor(Math.log(avalue) / Math.log(10) / 3)\n    const suffix = isByteFormat ? byteSuffix[numberType] : numberSuffix[numberType]\n\n    const digitsToRemove = numberType * 3 - precision\n    const digitsToKeep = Math.floor(value / (10 ** digitsToRemove)) / (10 ** precision)\n\n    // convert number to string\n    return (digitsToKeep).toString() + suffix\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2dd26ce0337cecc53a464793f1d3648c7b1075d0","contentHash":"28ead44071f826264e2574ee2b3ad55676462b334887d6d36e0a194156425f9f"}}